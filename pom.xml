<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="
          http://maven.apache.org/POM/4.0.0
          https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.0.6</version>
        <!--<groupId>org.springframework.cloud</groupId>-->
        <!--<artifactId>spring-cloud-starter-parent</artifactId>-->
        <!--<version>2022.0.2</version>-->
  </parent>

  <groupId>ru.vlapin.demo</groupId>
  <artifactId>lombok-demo</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <properties>

    <!--region General-->
    <java.version>20</java.version>
    <minimal.maven.version>3.9.1</minimal.maven.version>
    <spring-boot.version>3.0.6</spring-boot.version>
    <!--endregion-->

    <!--region Bills of material (BOM)-->
    <spring-cloud.version>2022.0.2</spring-cloud.version>
    <testcontainers.version>1.18.0</testcontainers.version>
    <!--endregion-->

    <!--region Libs-->
    <vavr.version>0.10.4</vavr.version>
    <checker.version>3.33.0</checker.version>
    <spotbugs.version>4.7.3</spotbugs.version>
    <annotations.version>24.0.1</annotations.version>
    <jcip-annotations.version>1.0</jcip-annotations.version>
    <springdoc-openapi.version>2.1.0</springdoc-openapi.version>
    <error_prone_annotations.version>2.18.0</error_prone_annotations.version>
    <!--endregion-->

    <!--region Test-libs-->
    <!--endregion-->

    <!--region Plugins-->
    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
    <jacoco-maven-plugin.version>0.8.9</jacoco-maven-plugin.version>
    <sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
    <maven-surefire-plugin.version>3.0.0</maven-surefire-plugin.version>
    <maven-enforcer-plugin.version>3.3.0</maven-enforcer-plugin.version>
    <lombok-maven-plugin.version>1.18.20.0</lombok-maven-plugin.version>
    <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
    <versions-maven-plugin.version>2.15.0</versions-maven-plugin.version>
    <spotbugs-maven-plugin.version>4.7.3.4</spotbugs-maven-plugin.version>
    <yaml-properties-maven-plugin.version>1.1.3</yaml-properties-maven-plugin.version>
    <openapi-generator-maven-plugin.version>6.5.0</openapi-generator-maven-plugin.version>
    <assertj-assertions-generator-maven-plugin.version>2.2.0</assertj-assertions-generator-maven-plugin.version>
    <!--endregion-->

  </properties>

  <profiles>
    <profile>
      <id>build</id>

      <properties>
        <!--suppress UnresolvedMavenProperty -->
        <sourceDir>${delombokedSourceDir}</sourceDir>
      </properties>

    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>io.vavr</groupId>
        <artifactId>vavr</artifactId>
        <version>${vavr.version}</version>
      </dependency>

      <!--region Common Annotations (CheckerFramework, JetBrains, SpotBugs, ErrorProne)-->
      <dependency>
        <groupId>net.jcip</groupId>
        <artifactId>jcip-annotations</artifactId>
        <version>${jcip-annotations.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>org.jetbrains</groupId>
        <artifactId>annotations</artifactId>
        <version>${annotations.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker</artifactId>
        <version>${checker.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-annotations</artifactId>
        <version>${spotbugs.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>${error_prone_annotations.version}</version>
        <scope>provided</scope>
      </dependency>
      <!--endregion-->

      <!--region OpenAPI-->
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${springdoc-openapi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-common</artifactId>
        <version>${springdoc-openapi.version}</version>
      </dependency>
      <!--endregion-->

    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!--suppress VulnerableLibrariesLocal -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-rest</artifactId>
    </dependency>
    <!--suppress VulnerableLibrariesLocal -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-openfeign</artifactId>
    </dependency>
    <dependency>
      <groupId>org.thymeleaf.extras</groupId>
      <artifactId>thymeleaf-extras-springsecurity6</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>

    <!--suppress VulnerableLibrariesLocal -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>org.checkerframework</groupId>
          <artifactId>checker-qual</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.vavr</groupId>
      <artifactId>vavr</artifactId>
    </dependency>

    <!--region Common Annotations (CheckerFramework, JetBrains, SpotBugs, ErrorProne)-->
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>net.jcip</groupId>
      <artifactId>jcip-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>org.checkerframework</groupId>
      <artifactId>checker</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.errorprone</groupId>
      <artifactId>error_prone_annotations</artifactId>
    </dependency>
    <!--endregion-->

    <!--region OpenAPI-->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-common</artifactId>
    </dependency>
    <!--endregion-->

  </dependencies>

  <build>
    <!--    <defaultGoal>clean lombok:delombok</defaultGoal>-->
    <defaultGoal>verify spring-boot:run</defaultGoal>
    <!--suppress MavenModelInspection -->
    <sourceDirectory>${lombok.outputDirectory}</sourceDirectory>

    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <compilerArgs>
              <arg>--enable-preview</arg><!--maven.compiler.enablePreview-->
              <arg>-Xlint:unchecked</arg>
              <arg>-Xlint:preview</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED</arg>
            </compilerArgs>
            <annotationProcessorPaths>
              <processorPath>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
              </processorPath>
              <processorPath>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring-boot.version}</version>
              </processorPath>
            </annotationProcessorPaths>
            <annotationProcessors>
              <annotationProcessor>lombok.launch.AnnotationProcessorHider$AnnotationProcessor</annotationProcessor>
              <annotationProcessor>lombok.launch.AnnotationProcessorHider$ClaimingProcessor</annotationProcessor>
              <annotationProcessor>org.springframework.boot.configurationprocessor.ConfigurationMetadataAnnotationProcessor</annotationProcessor>
            </annotationProcessors>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <argLine>--enable-preview</argLine>
            <includes>
              <include>**/Test*.java</include>
              <include>**/*Test.java</include>
              <include>**/*Tests.java</include>
              <include>**/*TestCase.java</include>
            </includes>

            <properties>
              <!--<includeTags>fast</includeTags>-->
              <excludeTags>slow</excludeTags>
              <!--<configurationParameters>-->
              <!--junit.jupiter.conditions.deactivate = *-->
              <!--</configurationParameters>-->
            </properties>

          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>verify</phase>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin.version}</version>
          <executions>
            <execution>
              <id>openapi-generator-cleaning</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target name="cleanup-openapi-dir">
                  <!--suppress MavenModelInspection -->
                  <delete dir="${openapi.generator.maven.plugin.output}/.openapi-generator"/>
                  <!--suppress MavenModelInspection -->
                  <delete file="${openapi.generator.maven.plugin.output}/.openapi-generator-ignore"/>
                  <!--suppress MavenModelInspection -->
                  <delete file="${openapi.generator.maven.plugin.output}/pom.xml"/>
                  <!--suppress MavenModelInspection -->
                  <delete file="${openapi.generator.maven.plugin.output}/README.md"/>
                </target>
              </configuration>
            </execution><!--openapi-generator-cleaning:generate-sources:run-->
            <execution>
              <id>delombok-openapi-generated-sources</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target name="delombok-openapi-generated-sources">
                  <property name="maven.classpath" refid="maven.compile.classpath"/>
                  <java classname="lombok.launch.Main" fork="true">
                    <classpath>
                      <!--suppress MavenModelInspection -->
                      <pathelement path="${maven.classpath}"/>
                    </classpath>
                    <arg value="delombok"/>
                    <!--suppress MavenModelInspection -->
                    <arg value="${openapi.generator.maven.plugin.output}"/>
                    <arg value="-d"/>
                    <!--suppress MavenModelInspection -->
                    <arg value="${lombok.outputDirectory}"/>
                  </java>
                </target>
              </configuration>
            </execution><!--delombok-openapi-generated-sources:generate-sources:run-->
            <execution>
              <id>delombok-sources</id>
              <phase>process-sources</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target name="delombok-sources">
                  <property name="maven.classpath" refid="maven.compile.classpath"/>
                  <!--suppress MavenModelInspection -->
                  <mkdir dir="${lombok.outputDirectory}"/>
                  <java classname="lombok.launch.Main" fork="true">
                    <classpath>
                      <!--suppress MavenModelInspection -->
                      <pathelement path="${maven.classpath}"/>
                      <!--suppress MavenModelInspection -->
                      <pathelement path="${openapi.generator.maven.plugin.output}"/>
                    </classpath>
                    <arg value="delombok"/>
                    <!--suppress MavenModelInspection -->
                    <arg value="${lombok.sourceDirectory}"/>
                    <arg value="-d"/>
                    <!--suppress MavenModelInspection -->
                    <arg value="${lombok.outputDirectory}"/>
                  </java>
                </target>
              </configuration>
            </execution><!--delombok-sources:process-sources:run-->
            <execution>
              <id>delombok-test-sources</id>
              <phase>process-test-sources</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target name="delombok-test-sources">
                  <property name="maven.classpath" refid="maven.test.classpath"/>
                  <!--suppress MavenModelInspection -->
                  <mkdir dir="${lombok.testOutputDirectory}"/>
                  <java classname="lombok.launch.Main" fork="true">
                    <classpath>
                      <!--suppress MavenModelInspection -->
                      <pathelement path="${maven.classpath}"/>
                      <!--suppress MavenModelInspection -->
                      <pathelement path="${lombok.outputDirectory}"/>
                      <!--suppress MavenModelInspection -->
                      <pathelement path="${assertj.targetDir}"/>
                    </classpath>
                    <arg value="delombok"/>
                    <!--suppress MavenModelInspection -->
                    <arg value="${lombok.testSourceDirectory}"/>
                    <arg value="-d"/>
                    <!--suppress MavenModelInspection -->
                    <arg value="${lombok.testOutputDirectory}"/>
                  </java>
                </target>
              </configuration>
            </execution><!--delombok-test-sources:process-test-sources:run-->
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-maven</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>${minimal.maven.version}</version>
                  </requireMavenVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>jacoco-initialize</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <propertyName>surefireArgLine</propertyName>
              </configuration>
            </execution>
            <execution>
              <id>post-unit-test</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
            <execution>
              <id>pre-integration-test</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <propertyName>failsafeArgLine</propertyName>
              </configuration>
            </execution>
            <execution>
              <id>post-integration-test</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>update</id>
              <phase>initialize</phase>
              <goals>
                <goal>update-parent</goal>
                <goal>update-properties</goal>
                <goal>display-plugin-updates</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>it.ozimov</groupId>
          <artifactId>yaml-properties-maven-plugin</artifactId>
          <version>${yaml-properties-maven-plugin.version}</version>
          <executions>
            <execution>
              <phase>initialize</phase>
              <goals>
                <goal>read-project-properties</goal>
              </goals>
              <configuration>
                <files>
                  <!--suppress UnresolvedMavenProperty-->
                  <file>${maven.multiModuleProjectDirectory}/maven.yml</file>
                </files>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok-maven-plugin</artifactId>
          <version>${lombok-maven-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>${spotbugs-maven-plugin.version}</version>
          <configuration>
            <effort>Max</effort>
            <threshold>Low</threshold>
            <xmlOutput>true</xmlOutput>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>add-source</id>
              <!--<phase>generate-sources</phase>&lt;!&ndash;default&ndash;&gt;-->
              <goals>
                <goal>add-source</goal>
              </goals>
              <configuration>
                <sources>
                  <!--suppress MavenModelInspection -->
                  <source>${lombok.outputDirectory}</source>
                </sources>
              </configuration>
            </execution><!--add-source:generate-sources:add-source-->
            <execution>
              <id>add-test-sources</id>
              <!--<phase>generate-test-sources</phase>--><!--default-->
              <goals>
                <goal>add-test-source</goal>
              </goals>
              <configuration>
                <sources>
                  <!--suppress MavenModelInspection -->
                  <source>${assertj.targetDir}</source>
                </sources>
              </configuration>
            </execution><!--add-test-sources:generate-test-sources:add-test-source-->
          </executions>
        </plugin>
        <plugin>
          <groupId>org.openapitools</groupId>
          <artifactId>openapi-generator-maven-plugin</artifactId>
          <version>${openapi-generator-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>generate-openapi-client-code</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>generate</goal>
              </goals>
            </execution><!--generate-sources:generate-->
          </executions>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
          <configuration>
            <excludes>
              <exclude>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
              </exclude>
            </excludes>
            <executable>true</executable>
            <jvmArguments>--enable-preview</jvmArguments>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.assertj</groupId>
          <artifactId>assertj-assertions-generator-maven-plugin</artifactId>
          <version>${assertj-assertions-generator-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>generate-assertj-assertions</id>
              <phase>generate-test-sources</phase>
              <goals>
                <goal>generate-assertions</goal>
              </goals>
            </execution><!--generate-assertj-assertions:generate-test-sources:generate-assertions-->
          </executions>
          <configuration>
            <templates>
              <templatesDirectory>${project.basedir}/src/test/assertj-templates</templatesDirectory>

              <junitSoftEntryPointAssertionClass>my_junit_soft_assertions_entry_point_class_template.txt
              </junitSoftEntryPointAssertionClass>
              <bddEntryPointAssertionClass>my_bdd_assertions_entry_point_class_template.txt
              </bddEntryPointAssertionClass>
              <hierarchicalAssertionAbstractClass>my_custom_abstract_assertion_class_template.txt
              </hierarchicalAssertionAbstractClass>
              <hierarchicalAssertionConcreteClass>my_custom_hierarchical_assertion_class_template.txt
              </hierarchicalAssertionConcreteClass>
              <assertionClass>my_custom_assertion_class_template.txt</assertionClass>
              <softEntryPointAssertionClass>my_soft_assertions_entry_point_class_template.txt
              </softEntryPointAssertionClass>
              <assertionsEntryPointClass>my_standard_assertions_entry_point_class_template.txt
              </assertionsEntryPointClass>
              <!--<autoCloseableSoftEntryPointAssertionsClass>my_auto_closeable_soft_assertions_entry_point_class_template.txt</autoCloseableSoftEntryPointAssertionsClass>-->
              <!--<junitBddSoftEntryPointAssertionsClass>my_junit_bdd_soft_assertions_entry_point_class_template.txt</junitBddSoftEntryPointAssertionsClass>-->
              <!--<bddSoftEntryPointAssertionsClass>my_bdd_soft_assertions_entry_point_class_template.txt</bddSoftEntryPointAssertionsClass>-->
            </templates>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>it.ozimov</groupId>
        <artifactId>yaml-properties-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-assertions-generator-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <modelVersion>4.0.0</modelVersion>

</project>
